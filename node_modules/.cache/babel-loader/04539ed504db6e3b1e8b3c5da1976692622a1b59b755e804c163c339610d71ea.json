{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igor\\\\Desktop\\\\online-shop\\\\client\\\\src\\\\components\\\\DeviceList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row, Spinner } from \"react-bootstrap\";\nimport DeviceItem from \"./DeviceItem\";\nimport { getAllDevices } from \"../api/deviceApi\";\nimport DropdownNumber from \"./Dropdown\";\nimport PaginationPubl from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeviceList = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  const [number, setNumber] = useState(5);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(null);\n  useEffect(() => {\n    let brandId = device.selectedBrand.id | null;\n    let typeId = device.selectedType.id | null;\n    !brandId && !typeId ? getAllDevices(null, null, number, page).then(resp => {\n      device.setDevices(resp.rows);\n      setTotal(resp.count);\n    }).finally(() => setLoading(false)) : getAllDevices(brandId ? brandId : null, typeId ? typeId : null, number ? number : null).then(resp => device.setDevices(resp.rows)).finally(() => setLoading(false));\n    setPage(1);\n  }, [device.selectedBrand, device.selectedType, number, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: 'mt-5',\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }, this) : device.devices.length === 0 ? /*#__PURE__*/_jsxDEV(Row, {\n        children: \"No items found :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this) : device.devices.map(device => /*#__PURE__*/_jsxDEV(DeviceItem, {\n        device: device\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 81\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropdownNumber, {\n      setNumber: setNumber,\n      number: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaginationPubl, {\n      number: number,\n      onClick: setPage,\n      total: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"UlKrXVeNERyYwPZtwaBdquu0t+I=\")), \"UlKrXVeNERyYwPZtwaBdquu0t+I=\");\n_c2 = DeviceList;\nexport default DeviceList;\nvar _c, _c2;\n$RefreshReg$(_c, \"DeviceList$observer\");\n$RefreshReg$(_c2, \"DeviceList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","observer","Context","Row","Spinner","DeviceItem","getAllDevices","DropdownNumber","PaginationPubl","DeviceList","device","loading","setLoading","number","setNumber","page","setPage","total","setTotal","brandId","selectedBrand","id","typeId","selectedType","then","resp","setDevices","rows","count","finally","devices","length","map"],"sources":["C:/Users/igor/Desktop/online-shop/client/src/components/DeviceList.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row, Spinner} from \"react-bootstrap\";\r\nimport DeviceItem from \"./DeviceItem\";\r\nimport {getAllDevices} from \"../api/deviceApi\";\r\nimport DropdownNumber from \"./Dropdown\";\r\nimport PaginationPubl from \"./Pagination\";\r\n\r\n\r\nconst DeviceList = observer(() => {\r\n    const {device} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n    const [number, setNumber] = useState(5)\r\n    const [page, setPage] = useState(1)\r\n    const [total,setTotal] = useState(null)\r\n    useEffect(() => {\r\n        let brandId = device.selectedBrand.id | null;\r\n        let typeId = device.selectedType.id | null;\r\n        (!brandId && !typeId) ? getAllDevices(null, null, number, page).then(resp => {\r\n            device.setDevices(resp.rows)\r\n            setTotal(resp.count)\r\n        }).finally(() => setLoading(false)) : getAllDevices(brandId ? brandId : null, typeId ? typeId : null, number ? number : null).then(resp => device.setDevices(resp.rows)).finally(() => setLoading(false))\r\n        setPage(1)\r\n    }, [device.selectedBrand, device.selectedType, number,page])\r\n    return (\r\n        <>\r\n            <Row className={'mt-5'}>\r\n                {loading ? <Spinner/> : device.devices.length === 0 ?\r\n                    <Row>No items found :(</Row> : device.devices.map(device => <DeviceItem key={device.id}\r\n                                                                                            device={device}/>)}\r\n            </Row>\r\n            <DropdownNumber setNumber={setNumber} number={number}/>\r\n            <PaginationPubl number={number} onClick={setPage} total={total}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default DeviceList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}