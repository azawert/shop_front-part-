{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igor\\\\Desktop\\\\online-shop\\\\client\\\\src\\\\components\\\\TypeBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup, Spinner } from \"react-bootstrap\";\nimport { getAllTypes } from \"../api/typeApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getAllTypes().then(_ref => {\n      let {\n        type\n      } = _ref;\n      return device.setTypes(type);\n    }).finally(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }, this) : device === null || device === void 0 ? void 0 : device.types.map((type, idx) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      onClick: () => device.setSelectedType(type),\n      active: type.id === device.selectedType.id,\n      style: {\n        cursor: \"pointer\"\n      },\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 66\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}, \"pRJqYBvHH+Gn4/0zOO3x7nS4oEo=\")), \"pRJqYBvHH+Gn4/0zOO3x7nS4oEo=\");\n_c2 = TypeBar;\nexport default TypeBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"names":["React","useContext","useEffect","useState","observer","Context","ListGroup","Spinner","getAllTypes","TypeBar","device","loading","setLoading","then","type","setTypes","finally","types","map","idx","setSelectedType","id","selectedType","cursor","name"],"sources":["C:/Users/igor/Desktop/online-shop/client/src/components/TypeBar.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {ListGroup, Spinner} from \"react-bootstrap\";\r\nimport {getAllTypes} from \"../api/typeApi\";\r\n\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    const [loading,setLoading] = useState(true)\r\n    useEffect(()=>{\r\n        getAllTypes().then(({type})=>device.setTypes(type)).finally(()=>setLoading(false))\r\n    },[])\r\n    return (\r\n        <ListGroup>\r\n            {loading?<Spinner/>:device?.types.map((type, idx) => <ListGroup.Item key={type.id}\r\n                                                              onClick={() => device.setSelectedType(type)}\r\n                                                              active={type.id === device.selectedType.id}\r\n                                                              style={{cursor: \"pointer\"}}>{type.name}</ListGroup.Item>)}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAAQC,OAAO,QAAO,UAAU;AAChC,SAAQC,SAAS,EAAEC,OAAO,QAAO,iBAAiB;AAClD,SAAQC,WAAW,QAAO,gBAAgB;AAAC;AAG3C,MAAMC,OAAO,MAAGL,QAAQ,SAAC,MAAM;EAAA;EAC3B,MAAM;IAACM;EAAM,CAAC,GAAGT,UAAU,CAACI,OAAO,CAAC;EACpC,MAAM,CAACM,OAAO,EAACC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC3CD,SAAS,CAAC,MAAI;IACVM,WAAW,EAAE,CAACK,IAAI,CAAC;MAAA,IAAC;QAACC;MAAI,CAAC;MAAA,OAAGJ,MAAM,CAACK,QAAQ,CAACD,IAAI,CAAC;IAAA,EAAC,CAACE,OAAO,CAAC,MAAIJ,UAAU,CAAC,KAAK,CAAC,CAAC;EACtF,CAAC,EAAC,EAAE,CAAC;EACL,oBACI,QAAC,SAAS;IAAA,UACLD,OAAO,gBAAC,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,GAACD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,KAAK,CAACC,GAAG,CAAC,CAACJ,IAAI,EAAEK,GAAG,kBAAK,QAAC,SAAS,CAAC,IAAI;MAClB,OAAO,EAAE,MAAMT,MAAM,CAACU,eAAe,CAACN,IAAI,CAAE;MAC5C,MAAM,EAAEA,IAAI,CAACO,EAAE,KAAKX,MAAM,CAACY,YAAY,CAACD,EAAG;MAC3C,KAAK,EAAE;QAACE,MAAM,EAAE;MAAS,CAAE;MAAA,UAAET,IAAI,CAACU;IAAI,GAHdV,IAAI,CAACO,EAAE;MAAA;MAAA;MAAA;IAAA,QAGyB;EAAC;IAAA;IAAA;IAAA;EAAA,QACnG;AAEpB,CAAC,kCAAC;AAAC,MAdGZ,OAAO;AAgBb,eAAeA,OAAO;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}