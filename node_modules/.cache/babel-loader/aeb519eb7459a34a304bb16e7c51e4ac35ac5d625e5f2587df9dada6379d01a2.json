{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igor\\\\Desktop\\\\online-shop\\\\client\\\\src\\\\components\\\\BrandBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Card, Form, Spinner } from \"react-bootstrap\";\nimport { Context } from \"../index\";\nimport { getAllBrands } from \"../api/brandApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrandBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchBrands = async () => {\n      try {\n        const resp = await getAllBrands();\n        device.setBrands(resp);\n        console.log(device.brands);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchBrands();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: 'd-flex flex-wrap',\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }, this) : device.brands.map(brand => /*#__PURE__*/_jsxDEV(Card, {\n      className: 'p-3',\n      onClick: () => device.setSelectedBrand(brand),\n      style: {\n        cursor: \"pointer\",\n        marginRight: '2px',\n        backgroundColor: brand.id === device.selectedBrand.id ? '#0D6EFD' : 'white',\n        color: brand.id === device.selectedBrand.id ? 'white' : 'black'\n      },\n      children: brand.name\n    }, brand.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 66\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"77Zf9uMVF4vPwBfpAA38dpVQydY=\")), \"77Zf9uMVF4vPwBfpAA38dpVQydY=\");\n_c2 = BrandBar;\nexport default BrandBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"BrandBar$observer\");\n$RefreshReg$(_c2, \"BrandBar\");","map":{"version":3,"names":["React","useContext","useEffect","useState","observer","Card","Form","Spinner","Context","getAllBrands","BrandBar","device","isLoading","setIsLoading","fetchBrands","resp","setBrands","console","log","brands","e","map","brand","setSelectedBrand","cursor","marginRight","backgroundColor","id","selectedBrand","color","name"],"sources":["C:/Users/igor/Desktop/online-shop/client/src/components/BrandBar.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Card, Form, Spinner} from \"react-bootstrap\";\r\nimport {Context} from \"../index\";\r\nimport {getAllBrands} from \"../api/brandApi\";\r\n\r\nconst BrandBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    useEffect(() => {\r\n        const fetchBrands = async () => {\r\n            try {\r\n                const resp = await getAllBrands()\r\n                device.setBrands(resp)\r\n                console.log(device.brands)\r\n            } catch (e) {\r\n                console.log(e)\r\n            } finally {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n\r\n        fetchBrands()\r\n    }, [])\r\n    return (\r\n        <Form className={'d-flex flex-wrap'}>\r\n            {isLoading ? <Spinner/> : device.brands.map(brand => <Card key={brand.id} className={'p-3'}\r\n                                                                       onClick={() => device.setSelectedBrand(brand)}\r\n                                                                       style={{\r\n                                                                           cursor: \"pointer\",\r\n                                                                           marginRight: '2px',\r\n                                                                           backgroundColor: brand.id === device.selectedBrand.id ? '#0D6EFD' : 'white',\r\n                                                                           color: brand.id === device.selectedBrand.id ? 'white' : 'black'\r\n                                                                       }}>{brand.name}</Card>)}\r\n        </Form>\r\n    );\r\n});\r\n\r\nexport default BrandBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAAQC,IAAI,EAAEC,IAAI,EAAEC,OAAO,QAAO,iBAAiB;AACnD,SAAQC,OAAO,QAAO,UAAU;AAChC,SAAQC,YAAY,QAAO,iBAAiB;AAAC;AAE7C,MAAMC,QAAQ,MAAGN,QAAQ,SAAC,MAAM;EAAA;EAC5B,MAAM;IAACO;EAAM,CAAC,GAAGV,UAAU,CAACO,OAAO,CAAC;EACpC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,YAAY;MAC5B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMN,YAAY,EAAE;QACjCE,MAAM,CAACK,SAAS,CAACD,IAAI,CAAC;QACtBE,OAAO,CAACC,GAAG,CAACP,MAAM,CAACQ,MAAM,CAAC;MAC9B,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAClB,CAAC,SAAS;QACNP,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDC,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,oBACI,QAAC,IAAI;IAAC,SAAS,EAAE,kBAAmB;IAAA,UAC/BF,SAAS,gBAAG,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,GAAGD,MAAM,CAACQ,MAAM,CAACE,GAAG,CAACC,KAAK,iBAAI,QAAC,IAAI;MAAgB,SAAS,EAAE,KAAM;MAChC,OAAO,EAAE,MAAMX,MAAM,CAACY,gBAAgB,CAACD,KAAK,CAAE;MAC9C,KAAK,EAAE;QACHE,MAAM,EAAE,SAAS;QACjBC,WAAW,EAAE,KAAK;QAClBC,eAAe,EAAEJ,KAAK,CAACK,EAAE,KAAKhB,MAAM,CAACiB,aAAa,CAACD,EAAE,GAAG,SAAS,GAAG,OAAO;QAC3EE,KAAK,EAAEP,KAAK,CAACK,EAAE,KAAKhB,MAAM,CAACiB,aAAa,CAACD,EAAE,GAAG,OAAO,GAAG;MAC5D,CAAE;MAAA,UAAEL,KAAK,CAACQ;IAAI,GAPTR,KAAK,CAACK,EAAE;MAAA;MAAA;MAAA;IAAA,QAOS;EAAC;IAAA;IAAA;IAAA;EAAA,QAC/E;AAEf,CAAC,kCAAC;AAAC,MA9BGjB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}