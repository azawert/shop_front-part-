{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igor\\\\Desktop\\\\online-shop\\\\client\\\\src\\\\components\\\\modals\\\\ModalWindowType.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { createNewType } from \"../../api/typeApi\";\nimport { ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalWindowType = _ref => {\n  _s();\n  let {\n    isShown,\n    handleClose\n  } = _ref;\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const handleCreateClick = () => {\n    setIsLoading(true);\n    createNewType({\n      name: inputValue\n    }).then(() => {\n      setIsSuccess(true);\n      setTimeout(() => {\n        handleClose();\n      }, 2500);\n    }).catch(e => alert(e)).finally(() => setIsLoading(false));\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: isShown,\n    onHide: handleClose,\n    animation: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          isInvalid: inputValue.length <= 0,\n          placeholder: 'Enter type name',\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: handleCreateClick,\n        disabled: inputValue.length <= 0 || isLoading,\n        children: isLoading ? 'Loading...' : 'Add type'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalWindowType, \"0LjjkXPydGlmRwdtLTAN0JnUNY8=\");\n_c = ModalWindowType;\nexport default ModalWindowType;\nvar _c;\n$RefreshReg$(_c, \"ModalWindowType\");","map":{"version":3,"names":["React","Button","Form","Modal","useState","createNewType","ToastContainer","ModalWindowType","isShown","handleClose","inputValue","setInputValue","isLoading","setIsLoading","isSuccess","setIsSuccess","handleCreateClick","name","then","setTimeout","catch","e","alert","finally","length","target","value"],"sources":["C:/Users/igor/Desktop/online-shop/client/src/components/modals/ModalWindowType.js"],"sourcesContent":["import React from 'react';\r\nimport {Button, Form, Modal} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport {createNewType} from \"../../api/typeApi\";\r\nimport {ToastContainer} from \"react-toastify\";\r\n\r\nconst ModalWindowType = ({isShown, handleClose}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSuccess, setIsSuccess] = useState(false)\r\n    const handleCreateClick = () => {\r\n        setIsLoading(true)\r\n        createNewType({name: inputValue}).then(() => {\r\n            setIsSuccess(true)\r\n            setTimeout(() => {\r\n                handleClose()\r\n            }, 2500)\r\n        }).catch(e => alert(e)).finally(() => setIsLoading(false))\r\n\r\n    }\r\n    return (\r\n        <Modal show={isShown} onHide={handleClose} animation={true}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add type</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control isInvalid={inputValue.length <= 0} placeholder={'Enter type name'} value={inputValue}\r\n                                  onChange={(e) => setInputValue(e.target.value)}/>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"outline-secondary\" onClick={handleCreateClick}\r\n                        disabled={inputValue.length <= 0 || isLoading}>\r\n                    {isLoading ? 'Loading...' : 'Add type'}\r\n                </Button>\r\n            </Modal.Footer>\r\n            {isSuccess && <ToastContainer/>}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalWindowType;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAO,iBAAiB;AACnD,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,aAAa,QAAO,mBAAmB;AAC/C,SAAQC,cAAc,QAAO,gBAAgB;AAAC;AAE9C,MAAMC,eAAe,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAACC,OAAO;IAAEC;EAAW,CAAC;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMY,iBAAiB,GAAG,MAAM;IAC5BH,YAAY,CAAC,IAAI,CAAC;IAClBR,aAAa,CAAC;MAACY,IAAI,EAAEP;IAAU,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAM;MACzCH,YAAY,CAAC,IAAI,CAAC;MAClBI,UAAU,CAAC,MAAM;QACbV,WAAW,EAAE;MACjB,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC,CAACW,KAAK,CAACC,CAAC,IAAIC,KAAK,CAACD,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,MAAMV,YAAY,CAAC,KAAK,CAAC,CAAC;EAE9D,CAAC;EACD,oBACI,QAAC,KAAK;IAAC,IAAI,EAAEL,OAAQ;IAAC,MAAM,EAAEC,WAAY;IAAC,SAAS,EAAE,IAAK;IAAA,wBACvD,QAAC,KAAK,CAAC,MAAM;MAAC,WAAW;MAAA,uBACrB,QAAC,KAAK,CAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuB;MAAA;MAAA;MAAA;IAAA,QACxB,eACf,QAAC,KAAK,CAAC,IAAI;MAAA,uBACP,QAAC,IAAI;QAAA,uBACD,QAAC,IAAI,CAAC,OAAO;UAAC,SAAS,EAAEC,UAAU,CAACc,MAAM,IAAI,CAAE;UAAC,WAAW,EAAE,iBAAkB;UAAC,KAAK,EAAEd,UAAW;UACrF,QAAQ,EAAGW,CAAC,IAAKV,aAAa,CAACU,CAAC,CAACI,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAC5D;MAAA;MAAA;MAAA;IAAA,QACE,eACb,QAAC,KAAK,CAAC,MAAM;MAAA,wBACT,QAAC,MAAM;QAAC,OAAO,EAAC,gBAAgB;QAAC,OAAO,EAAEjB,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7C,eACT,QAAC,MAAM;QAAC,OAAO,EAAC,mBAAmB;QAAC,OAAO,EAAEO,iBAAkB;QACvD,QAAQ,EAAEN,UAAU,CAACc,MAAM,IAAI,CAAC,IAAIZ,SAAU;QAAA,UACjDA,SAAS,GAAG,YAAY,GAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QACjC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EACdE,SAAS,iBAAI,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3B;AAEhB,CAAC;AAAC,GArCIP,eAAe;AAAA,KAAfA,eAAe;AAuCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}